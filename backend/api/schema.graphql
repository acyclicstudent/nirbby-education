type Query{
    # Subjects.
    retrieveSubjectCatalogs: [SubjectCatalog]
    retrieveSubjectCollaborators: [SubjectCollaborator]
    retrieveSubjects(scope: String!, type: SubjectQueryType!): [Subject]
    # Students
    retrieveStudents: [Student]
}

type Mutation {
    test: String
}

#####################################
## Type Definitions
#####################################

type SubjectCatalog {
    id: ID
    name: String
    color: String
    textColor: String
}

type Student{
    id: ID
    parent: ID
    institution: ID
    name: String
    email: String
}

type SubjectCollaborator{
    subjectId: ID
    collaborator: ID
    lastColabDate: AWSTimestamp
    name: String
}

type Subject {
    id: ID
    category: ID
    creationDate: AWSTimestamp
    institution: ID
    certification: ID
    year: Int
}

#####################################
## Enum Definitions
#####################################

enum SubjectQueryType {
    DATE 
    CATEGORY 
    INSTITUTION
}